-- Simulates how Emacs shows currently active minor modes on the status line.
local function minor_mode_status()
    local status = ""
    if (vim.inspect(vim.b.venn_enabled) ~= "nil") then
        status = status .. "V"
    end
    return status
end

return {}

-- return {
--     "nvim-lualine/lualine.nvim",
--     dependencies = { "nvim-tree/nvim-web-devicons" },
--     lazy = false,
--     config = function()
--         require("lualine").setup {
--             options = {
--                 -- Don't use the square separators.
--                 component_separators = { left = "", right = "" },
--                 section_separators = { left = "", right = "", },
--                 disabled_filetypes = {
--                     statusline = { "neo-tree", },
--                 },
--             },
--             sections = {
--                 -- The blue bar.
--                 lualine_a = {
--                     {
--                         -- Show buffer number using the vim status line format:
--                         -- https://vimdoc.sourceforge.net/htmldoc/options.html#'statusline'
--                         "%n",
--                     },
--                 },
--                 -- The gray bar.
--                 lualine_b = {
--                     {
--                         -- Show total count of open buffers.
--                         function()
--                             local info = vim.fn.getbufinfo { buflisted = 1 }
--                             return #info
--                         end,
--                     },
--                 },
--                 lualine_c = {
--                     {
--                         "filename",
--                         -- Show relative path.
--                         path = 1,
--
--                         -- Show symbols after the filepath. Src: https://github.com/nvim-lualine/lualine.nvim#buffers-component-options
--                         symbols = {
--                             modified = ' ●', -- Text to show when the buffer is modified
--                             alternate_file = '#', -- Text to show to identify the alternate file
--                             directory = '', -- Text to show when the buffer is a directory
--                         },
--                     }
--                 },
--                 lualine_x = {
--                     minor_mode_status,
--                     {
--                         "diagnostics",
--                         sources = { "nvim_diagnostic", },
--                     },
--                     "fileformat",
--                     "copilot",
--                     "filetype",
--                     {
--                         function()
--                             return require("lsp-progress").progress()
--                         end,
--                         cond = function()
--                             return #vim.lsp.get_clients() > 0
--                         end,
--                         on_click = function()
--                             vim.cmd.checkhealth "vim.lsp"
--                         end
--                     },
--                 },
--                 lualine_y = {
--                     "searchcount",
--                     "progress",
--                 },
--                 lualine_z = {
--                     {
--                         "selectioncount",
--                     },
--                     {
--                         "location",
--                     },
--                 }
--             },
--         }
--
--         -- Refresh when LSP progress updates
--         vim.api.nvim_create_augroup("lualine_au", { clear = true })
--         vim.api.nvim_create_autocmd("User", {
--           group = "lualine_au",
--           pattern = "LspProgressStatusUpdated",
--           callback = require("lualine").refresh,
--         })
--     end,
-- }
